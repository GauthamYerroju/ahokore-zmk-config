/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        combos {
            // ,-----------------------------.      ,-----------------------------.
            // |     |    Esc    |     |     |      |     |     |   Eql     |     |
            // |-----+-----+-----+-Up--+VolU-|      |-------Up--------------------|
            // |     |    Tab   Lft   Rgt    |      |    Lft   Rgt  Mins    |     |
            // |-----+-----+-----+-Dwn-+VolD-+      |-Quot--Dwn-------------------|
            // |     |    Undo   |     |     |      |    Quot   |   Unds    |     |
            // `-----+-----+-----+-----+-----'      `-----------------------------'
            compatible = "zmk,combos";

            combo_esc {
                timeout-ms = <30>;
                key-positions = <1 2>;
                bindings = <&kp ESC>;
                layers = <0>;
            };

            combo_tab {
                timeout-ms = <30>;
                key-positions = <11 12>;
                bindings = <&kp TAB>;
                layers = <0>;
            };

            combo_undo {
                timeout-ms = <30>;
                key-positions = <21 22>;
                bindings = <&kp LC(Z)>;
                layers = <0>;
            };

            combo_vol_up {
                timeout-ms = <30>;
                key-positions = <4 14>;
                bindings = <&kp K_VOL_UP>;
                layers = <0>;
            };

            combo_vol_down {
                timeout-ms = <30>;
                key-positions = <14 24>;
                bindings = <&kp K_VOL_DN>;
                layers = <0>;
            };

            combo_lh_left {
                timeout-ms = <30>;
                key-positions = <12 13>;
                bindings = <&kp LEFT>;
                layers = <0>;
            };

            combo_lh_right {
                timeout-ms = <30>;
                key-positions = <13 14>;
                bindings = <&kp RIGHT>;
                layers = <0>;
            };

            combo_lh_up {
                timeout-ms = <30>;
                key-positions = <3 13>;
                bindings = <&kp UP>;
                layers = <0>;
            };

            combo_lh_down {
                timeout-ms = <30>;
                key-positions = <13 23>;
                bindings = <&kp DOWN>;
                layers = <0>;
            };

            combo_rh_left {
                timeout-ms = <30>;
                key-positions = <15 16>;
                bindings = <&kp LEFT>;
                layers = <0>;
            };

            combo_rh_right {
                timeout-ms = <30>;
                key-positions = <16 17>;
                bindings = <&kp RIGHT>;
                layers = <0>;
            };

            combo_rh_up {
                timeout-ms = <30>;
                key-positions = <6 16>;
                bindings = <&kp UP>;
                layers = <0>;
            };

            combo_rh_down {
                timeout-ms = <30>;
                key-positions = <16 26>;
                bindings = <&kp DOWN>;
                layers = <0>;
            };

            combo_equal {
                timeout-ms = <30>;
                key-positions = <7 8>;
                bindings = <&kp EQUAL>;
                layers = <0>;
            };

            combo_minus {
                timeout-ms = <30>;
                key-positions = <17 18>;
                bindings = <&kp MINUS>;
                layers = <0>;
            };

            combo_underscore {
                timeout-ms = <30>;
                key-positions = <27 28>;
                bindings = <&kp UNDER>;
                layers = <0>;
            };

            combo_quote_1 {
                timeout-ms = <30>;
                key-positions = <28 29>;
                bindings = <&kp SQT>;
                layers = <0>;
            };

            // Legacy
            combo_quote_2 {
                timeout-ms = <30>;
                key-positions = <15 25>;
                bindings = <&kp SQT>;
                layers = <0>;
            };
            
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B   |  N  |  M   |  ,  |  .  |  /  |
            //             | CTL | SPC |  TAB | RET | BSPC | DEL |

            bindings = <
                &kp Q           &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O           &kp P
                &hm LSHFT A     &hm LALT S  &kp D       &kp F       &kp G           &kp H       &kp J       &kp K       &hm RALT L      &hm RSHFT SEMI
                &hm LCTRL Z     &hm LGUI X  &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &hm RGUI DOT    &hm RCTRL FSLH
                                            &caps_word  &lt 1 SPC   &lt 2 TAB       &lt 1 RET   &lt 2 BSPC  &kp DEL
            >;
        };
        
        sym_layer {
            // -----------------------------------------------------------------------------------------
            // |  #  |  $  |  {  |  }  |  `  |     |  |  |  =  |  &  |  \  |
            // |  !  |  @  |  (  |  )  |  ~  |  *  |  +  |  -  |  %  |  '  |
            // |  %  |  ^  |  [  |  ]  |PSCRN|     |     |  _  |     |  \  |
            //             | CTL |     | TAB | SPC |     | DEL |
            bindings = <
                &kp HASH        &kp DLLR    &kp LBRC    &kp RBRC    &kp GRAVE       &none       &kp PIPE    &kp EQUAL   &kp AMPS    &kp BSLH
                &kp EXCL        &kp AT      &kp LBKT    &kp RBKT    &kp TILDE       &kp STAR    &kp PLUS    &kp MINUS   &kp PRCNT   &kp SQT
                &kp PRCNT       &kp CARET   &kp LPAR    &kp RPAR    &kp PSCRN       &none       &none       &kp UNDER   &none       &kp BSLH
                                            &caps_word  &trans      &lt 2 TAB       &lt 2 RET   &trans      &kp DEL
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  7  |  8  |  9  |     |      |      |  UP  |       |      |
            // |  0  |  4  |  5  |  6  |  .  | PGUP | LEFT | DOWN | RIGHT | PGUP |
            // |     |  1  |  2  |  3  |     | PGDN | HOME | MENU |  END  | PGDN |
            //             | CTL |     | TAB |  SPC |      |  DEL |
            bindings=<
                &none           &kp N7      &kp N8      &kp N9      &none           &none       &none       &kp UP      &none       &none
                &N0             &kp N4      &kp N5      &kp N6      &kp DOT         &kp PG_UP   &kp LEFT    &kp DOWN    &kp RIGHT   &kp PG_UP
                &none           &kp N1      &kp N2      &kp N3      &none           &kp PG_DN   &kp HOME    &kp K_APP   &kp END     &kp PG_DN
                                            &caps_word  &trans      &lt 2 TAB       &lt 2 RET   &trans      &kp DEL
            >;
        }

        tri_layer {
            // -----------------------------------------------------------------------------------------
            // | BT0 | BT1 | BT2 | BT3 | BT4 |     |  F7  |  F8  |  F9  |  F10  |
            // |RESET|BOOT |     |     |BTCLR|RESET|  F4  |  F5  |  F6  |  F11  |
            // |PSCRN|SLCK |PSBRK| INS |     |     |  F1  |  F2  |  F3  |  F12  |
            //             | CTL |     | TAB | SPC |      |  DEL |
            bindings=<
                &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4        &none       &kp F7      &kp F8      &kp F9      &kp F10
                &reset          &bootloader     &none           &none           &bt BT_CLR          &reset      &kp F4      &kp F5      &kp F6      &kp F11
                &kp PSCRN       &kp SLCK        &kp PAUSE_BREAK &kp INS         &none               &none       &kp F1      &kp F2      &kp F3      &kp F12
                                                &caps_word      &trans          &lt 2 TAB           &lt 2 RET   &trans      &kp DEL
            >;
        }
    };

};
